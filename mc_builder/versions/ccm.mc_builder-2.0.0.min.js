(()=>{const component={name:"mc_builder",version:[2,0,0],ccm:"https://ccmjs.github.io/ccm/versions/ccm-27.3.1.min.js",config:{css:["ccm.load",["https://ccmjs.github.io/eild/libs/bootstrap-5/css/bootstrap.min.css","https://ccmjs.github.io/eild/libs/bootstrap-5/css/bootstrap-dark.min.css","https://ccmjs.github.io/eild/mc_builder/resources/styles.min.css"],"https://ccmjs.github.io/eild/libs/bootstrap-5/css/bootstrap-icons.min.css",{url:"https://ccmjs.github.io/eild/libs/bootstrap-5/css/bootstrap-fonts.min.css",context:"head"}],editor:["ccm.component","https://ccmjs.github.io/akless-components/quill/versions/ccm.quill-2.0.0.min.js",{options:{modules:{toolbar:[["bold","italic","underline","strike"],[{color:[]},{background:[]}],[{script:"sub"},{script:"super"}],["link"]]},theme:"snow"}}],helper:["ccm.load","https://ccmjs.github.io/akless-components/modules/versions/helper-8.2.0.min.mjs"],html:["ccm.load","https://ccmjs.github.io/eild/mc_builder/resources/templates-v2.mjs"],ignore:{defaults:{},de:["ccm.load","https://ccmjs.github.io/eild/mc/resources/resources.mjs#de"],en:["ccm.load","https://ccmjs.github.io/eild/mc/resources/resources.mjs#en"],lang:["ccm.start","https://ccmjs.github.io/akless-components/lang/versions/ccm.lang-1.1.0.min.js",{translations:{de:["ccm.load","https://ccmjs.github.io/eild/mc/resources/resources.mjs#de"],en:["ccm.load","https://ccmjs.github.io/eild/mc/resources/resources.mjs#en"]}}]},libs:["ccm.load","https://ccmjs.github.io/eild/libs/bootstrap-5/js/bootstrap.bundle.min.js"],shadow:"none",text:["ccm.load","https://ccmjs.github.io/eild/mc_builder/resources/resources.mjs#en"],tool:["ccm.component","https://ccmjs.github.io/eild/mc/versions/ccm.mc-1.1.0.min.js"]},Instance:function(){let $;let mc_config;let modal;let editor;let form;this.ready=(async()=>{$=Object.assign({},this.ccm.helper,this.helper);$.use(this.ccm);this.element.classList.add(this.component.name);this.logger&&this.logger.log("ready",$.privatize(this,true));this.dark==="auto"&&this.element.classList.add("dark_auto");this.dark===true&&this.element.classList.add("dark_mode")});this.start=(async()=>{mc_config=await adjustDataset(await $.integrate(await $.dataset(this.data),await $.integrate(this.ignore.defaults,this.tool.config)));this.logger&&this.logger.log("start",$.clone(mc_config));this.render(mc_config);form=this.element.querySelector("#element."+this.component.name+" > form");modal=this.element.querySelector("#edit");modal.addEventListener("hidden.bs.modal",events.onClose);this.lang&&!this.lang.getContext()&&$.append(this.element.querySelector("header"),this.lang.root);this.user&&$.append(this.element.querySelector("header"),this.user.root);this.element.querySelectorAll("*[name]").forEach(input=>input.addEventListener("change",()=>this.render(mc_config=this.getValue())));this.text.submit&&form.addEventListener("submit",event=>{event.preventDefault();const config=this.getValue();this.logger&&this.logger.log("finish",$.clone(config));$.onFinish(this,config)})});this.render=((mc_config=this.getValue())=>{this.html.render(this.html.main($.clone(mc_config),this,events),this.element);this.lang&&this.lang.translate()});this.getValue=(()=>{const config=Object.assign({},mc_config,$.formData(form));config.escape=!config.escape;if(config.lang==="multi")config.lang=this.ignore.lang;else{config.text=this.ignore[config.lang];config.lang=""}if(config.save){if(!config.onfinish)config.onfinish={};config.onfinish.store={settings:this.results,key:config.onfinish&&config.onfinish.key||this.key||$.generateKey(),unique:true}}else config.onfinish.store=false;delete config.save;return config});const adjustDataset=async mc_config=>{mc_config.questions=$.clone(await $.solveDependency(mc_config.questions));if(Array.isArray(mc_config.questions)){const questions={};mc_config.questions.forEach(question=>{question.key=question.key||$.generateKey();questions[question.key]=question;const answers={};question.answers.forEach(answer=>{answer.key=answer.key||$.generateKey();answers[answer.key]=answer});question.answers=answers});mc_config.questions=questions}return mc_config};const events={onAdd:question_key=>{const key=$.generateKey();if(question_key)mc_config.questions[question_key].answers[key]={key:key,solution:false,text:""};else mc_config.questions[key]={key:key,answers:{},text:""};this.render(mc_config)},onClose:()=>{const answer_key=modal.dataset.answer;const question=mc_config.questions[modal.dataset.question];const text=editor.getValue().value;if(answer_key)question.answers[answer_key].text=text;else question.text=text;this.render(mc_config)},onDelete:(question_key,answer_key)=>{if(answer_key)delete mc_config.questions[question_key].answers[answer_key];else delete mc_config.questions[question_key];this.render(mc_config)},onEdit:async(question_key,answer_key="")=>{const question=mc_config.questions[question_key];editor=await this.editor.start({data:{value:answer_key?question.answers[answer_key].text:question.text},html:true,root:this.element.querySelector("#edit .modal-content")});modal.dataset.question=question_key;modal.dataset.answer=answer_key},onExportQuestions:()=>{let result="";const questions=Object.values(this.getValue().questions);questions.forEach(question=>{result+=question.text+";\r\n";const answers=Object.values(question.answers);answers.forEach(answer=>result+=(answer.solution?"1":"0")+";"+answer.text+"\r\n");result+=";\r\n"});result=result.slice(0,-2);window.open(encodeURI("data:text/csv;charset=utf-8,\ufeff"+result))},onFileSelected:event=>{const reader=new FileReader;reader.onload=(()=>{let data=reader.result;data=data.split("\n");const questions={};const readQuestion=()=>{const question={key:$.generateKey(),text:data.shift().split(";")[0],answers:{}};if(question.text.startsWith('"'))question.text=question.text.substring(1,question.text.lastIndexOf('"')).replaceAll('""','"');question.text=question.text.trim();while(data.length&&!data[0].startsWith(";"))readAnswer(question);questions[question.key]=question;data.shift()};const readAnswer=question=>{let answer=data.shift().split(";");answer={key:$.generateKey(),solution:answer[0]==="1",text:answer[1]};if(answer.text.startsWith('"'))answer.text=answer.text.substring(1,answer.text.lastIndexOf('"')).replaceAll('""','"');answer.text=answer.text.trim();question.answers[answer.key]=answer};while(data.length&&!data[0].startsWith(";"))readQuestion();mc_config.questions=questions;this.render(mc_config)});reader.readAsText(event.target.files[0],"UTF-8")},onImportQuestions:()=>this.element.querySelector("input[type=file]").click(),onMoveUp:(question_key,answer_key)=>{if(!answer_key)move(mc_config,"questions",question_key,true);else move(mc_config.questions[question_key],"answers",answer_key,true);this.render(mc_config)},onMoveDown:(question_key,answer_key)=>{if(!answer_key)move(mc_config,"questions",question_key,false);else move(mc_config.questions[question_key],"answers",answer_key,false);this.render(mc_config)},onShowPreview:(config=this.getValue())=>{const modal_body=this.element.querySelector("#preview .modal-content");modal_body.innerHTML=this.html.spinner;this.tool.start(Object.assign(config,{root:modal_body}))},onShowQuestion:question_key=>{const config=this.getValue();Object.assign(config,{data:{},feedback:true,logger:"",number:"",onfinish:"",questions:[config.questions[question_key]],retry:true,shuffle:"",user:""});events.onShowPreview(config)},onSwitch:(question_key,answer_key)=>{const answer=mc_config.questions[question_key].answers[answer_key];answer.solution=!answer.solution;this.render(mc_config)}};function move(parent,prop,key,up_down){const obj=parent[prop];const values=Object.values(obj);const i=values.findIndex(value=>value===obj[key]);if(up_down?i<=0:i>=values.length-1)return;let tmp=values[i];const j=up_down?i-1:i+1;values[i]=values[j];values[j]=tmp;parent[prop]=$.arrToObj(values)}}};let b="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[b])return window.ccm.files[b]=component;(b=window.ccm&&window.ccm.components[component.name])&&b.ccm&&(component.ccm=b.ccm);"string"===typeof component.ccm&&(component.ccm={url:component.ccm});let c=(component.ccm.url.match(/(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)/)||[""])[0];if(window.ccm&&window.ccm[c])window.ccm[c].component(component);else{var a=document.createElement("script");document.head.appendChild(a);component.ccm.integrity&&a.setAttribute("integrity",component.ccm.integrity);component.ccm.crossorigin&&a.setAttribute("crossorigin",component.ccm.crossorigin);a.onload=function(){(c="latest"?window.ccm:window.ccm[c]).component(component);document.head.removeChild(a)};a.src=component.ccm.url}})();